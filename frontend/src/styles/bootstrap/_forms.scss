// scss-lint:disable QualifyingElement
//
// Textual form controls
//
.form-control {
    display: block;
    width: 100%;
    // // Make inputs at least the height of their button counterpart (base line-height + padding + border)
    // height: $input-height;
    padding: $input-padding-y $input-padding-x;
    font-size: $font-size-base;
    line-height: $input-line-height;
    color: $input-color;
    background-color: $input-bg;
    // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
    background-image: none;
    background-clip: padding-box;
    border: $input-btn-border-width solid $input-border-color;
    // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
    @if $enable-rounded {
        // Manually use the if/else instead of the mixin to account for iOS override
        border-radius: $input-border-radius;
    }
    @else {
        // Otherwise undo the iOS default
        border-radius: 0;
    }
    @include box-shadow($input-box-shadow);
    @include transition($input-transition);
    // Unstyle the caret on `<select>`s in IE10+.
    &::-ms-expand {
        background-color: transparent;
        border: 0;
    }
    // Customize the `:focus` state to imitate native WebKit styles.
    @include form-control-focus();
    // Placeholder
    &::placeholder {
        color: $input-color-placeholder;
        // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
        opacity: 1;
    }
    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    &:disabled,
    &[readonly] {
        background-color: $input-bg-disabled;
        // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
        opacity: 1;
    }
    &:disabled {
        cursor: $cursor-disabled;
    }
}

select.form-control {
    &:not([size]):not([multiple]) {
        $select-border-width: ($border-width * 2);
        height: calc(#{$input-height} + #{$select-border-width});
    }
    &:focus::-ms-value {
        // Suppress the nested default white text on blue background highlight given to
        // the selected option text when the (still closed) <select> receives focus
        // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
        // match the appearance of the native widget.
        // See https://github.com/twbs/bootstrap/issues/19398.
        color: $input-color;
        background-color: $input-bg;
    }
}

// Make file inputs better match text inputs by forcing them to new lines.
.form-control-file,
.form-control-range {
    display: block;
}

//
// Labels
//
// For use with horizontal and inline forms, when you need the label text to
// align with the form controls.
.col-form-label {
    padding-top: calc(#{$input-padding-y} - #{$input-btn-border-width} * 2);
    padding-bottom: calc(#{$input-padding-y} - #{$input-btn-border-width} * 2);
    margin-bottom: 0; // Override the `<label>` default
}

.col-form-label-lg {
    padding-top: calc(#{$input-padding-y-lg} - #{$input-btn-border-width} * 2);
    padding-bottom: calc(#{$input-padding-y-lg} - #{$input-btn-border-width} * 2);
    font-size: $font-size-lg;
}

.col-form-label-sm {
    padding-top: calc(#{$input-padding-y-sm} - #{$input-btn-border-width} * 2);
    padding-bottom: calc(#{$input-padding-y-sm} - #{$input-btn-border-width} * 2);
    font-size: $font-size-sm;
}

//
// Legends
//
// For use with horizontal and inline forms, when you need the legend text to
// be the same size as regular labels, and to align with the form controls.
.col-form-legend {
    padding-top: $input-padding-y;
    padding-bottom: $input-padding-y;
    margin-bottom: 0;
    font-size: $font-size-base;
}

// Static form control text
//
// Apply class to an element to make any string of text align with labels in a
// horizontal form layout.
.form-control-static {
    padding-top: $input-padding-y;
    padding-bottom: $input-padding-y;
    margin-bottom: 0; // match inputs if this class comes on inputs with default margins
    line-height: $input-line-height;
    border: solid transparent;
    border-width: $input-btn-border-width 0;
    &.form-control-sm,
    &.form-control-lg {
        padding-right: 0;
        padding-left: 0;
    }
}

// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// The `.form-group-* form-control` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.
.form-control-sm {
    padding: $input-padding-y-sm $input-padding-x-sm;
    font-size: $font-size-sm;
    @include border-radius($input-border-radius-sm);
}

select.form-control-sm {
    &:not([size]):not([multiple]) {
        height: $input-height-sm;
    }
}

.form-control-lg {
    padding: $input-padding-y-lg $input-padding-x-lg;
    font-size: $font-size-lg;
    @include border-radius($input-border-radius-lg);
}

select.form-control-lg {
    &:not([size]):not([multiple]) {
        height: $input-height-lg;
    }
}

// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.
.form-group {
    margin-bottom: $form-group-margin-bottom;
}

.form-text {
    display: block;
    margin-top: $form-text-margin-top;
}

// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.
.form-check {
    position: relative;
    display: block;
    margin-bottom: $form-check-margin-bottom;
    &.disabled {
        .form-check-label {
            color: $text-muted;
            cursor: $cursor-disabled;
      